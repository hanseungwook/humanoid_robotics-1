;; Auto-generated. Do not edit!


(when (boundp 'pr2_tilt_laser_interface::GetSnapshotGoal)
  (if (not (find-package "PR2_TILT_LASER_INTERFACE"))
    (make-package "PR2_TILT_LASER_INTERFACE"))
  (shadow 'GetSnapshotGoal (find-package "PR2_TILT_LASER_INTERFACE")))
(unless (find-package "PR2_TILT_LASER_INTERFACE::GETSNAPSHOTGOAL")
  (make-package "PR2_TILT_LASER_INTERFACE::GETSNAPSHOTGOAL"))

(in-package "ROS")
;;//! \htmlinclude GetSnapshotGoal.msg.html


(defclass pr2_tilt_laser_interface::GetSnapshotGoal
  :super ros::object
  :slots (_start_angle _end_angle _speed _hi_fidelity _continuous ))

(defmethod pr2_tilt_laser_interface::GetSnapshotGoal
  (:init
   (&key
    ((:start_angle __start_angle) 0.0)
    ((:end_angle __end_angle) 0.0)
    ((:speed __speed) 0.0)
    ((:hi_fidelity __hi_fidelity) nil)
    ((:continuous __continuous) nil)
    )
   (send-super :init)
   (setq _start_angle (float __start_angle))
   (setq _end_angle (float __end_angle))
   (setq _speed (float __speed))
   (setq _hi_fidelity __hi_fidelity)
   (setq _continuous __continuous)
   self)
  (:start_angle
   (&optional __start_angle)
   (if __start_angle (setq _start_angle __start_angle)) _start_angle)
  (:end_angle
   (&optional __end_angle)
   (if __end_angle (setq _end_angle __end_angle)) _end_angle)
  (:speed
   (&optional __speed)
   (if __speed (setq _speed __speed)) _speed)
  (:hi_fidelity
   (&optional __hi_fidelity)
   (if __hi_fidelity (setq _hi_fidelity __hi_fidelity)) _hi_fidelity)
  (:continuous
   (&optional __continuous)
   (if __continuous (setq _continuous __continuous)) _continuous)
  (:serialization-length
   ()
   (+
    ;; float32 _start_angle
    4
    ;; float32 _end_angle
    4
    ;; float32 _speed
    4
    ;; bool _hi_fidelity
    1
    ;; bool _continuous
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32 _start_angle
       (sys::poke _start_angle (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _end_angle
       (sys::poke _end_angle (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _speed
       (sys::poke _speed (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; bool _hi_fidelity
       (if _hi_fidelity (write-byte -1 s) (write-byte 0 s))
     ;; bool _continuous
       (if _continuous (write-byte -1 s) (write-byte 0 s))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32 _start_angle
     (setq _start_angle (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _end_angle
     (setq _end_angle (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _speed
     (setq _speed (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; bool _hi_fidelity
     (setq _hi_fidelity (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; bool _continuous
     (setq _continuous (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;;
   self)
  )

(setf (get pr2_tilt_laser_interface::GetSnapshotGoal :md5sum-) "464673531a0e6172d0d965e354c952f0")
(setf (get pr2_tilt_laser_interface::GetSnapshotGoal :datatype-) "pr2_tilt_laser_interface/GetSnapshotGoal")
(setf (get pr2_tilt_laser_interface::GetSnapshotGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Goal
# We always want to command. Don't need this bool
# bool command_laser   # True: Use the command below. False: Use existing profile
float32 start_angle
float32 end_angle
float32 speed
bool hi_fidelity
bool continuous

")



(provide :pr2_tilt_laser_interface/GetSnapshotGoal "464673531a0e6172d0d965e354c952f0")


