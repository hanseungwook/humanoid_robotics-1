Index: server/physics/Body.cc
===================================================================
--- server/physics/Body.cc	(revision 8729)
+++ server/physics/Body.cc	(working copy)
@@ -677,3 +668,13 @@
   if (s == false)
     this->SetEnabled(true);
 }
+
+////////////////////////////////////////////////////////////////////////////////
+// Set Mass
+void Body::SetMass(Mass mass)
+{
+  /// @todo: needs verification
+  this->mass = mass;
+  this->customMass = mass;
+}
+
Index: server/physics/Body.hh
===================================================================
--- server/physics/Body.hh	(revision 8729)
+++ server/physics/Body.hh	(working copy)
@@ -104,6 +104,9 @@
     /// \brief Set whether gravity affects this body
     public: virtual void SetGravityMode(bool mode) = 0;
 
+    /// \brief Set whether gravity affects this body
+    public: virtual bool GetGravityMode() = 0;
+
     /// \brief Set whether this body will collide with others in the model
     public: virtual void SetSelfCollide(bool collide) = 0;
 
@@ -165,6 +168,9 @@
     /// \brief Get the mass of the body
     public: const Mass &GetMass() const { return mass; }
 
+    /// \brief Set the mass of the body
+    public: void SetMass(Mass mass);
+
     /// \brief Get the list of interfaces e.g "pioneer2dx_model1::laser::laser_iface0->laser"
     public: void GetInterfaceNames(std::vector<std::string>& list) const;
 
Index: server/physics/ode/ODEBody.cc
===================================================================
--- server/physics/ode/ODEBody.cc	(revision 8729)
+++ server/physics/ode/ODEBody.cc	(working copy)
@@ -147,6 +143,16 @@
 }
 
 ////////////////////////////////////////////////////////////////////////////////
+// Get whether gravity affects this body
+bool ODEBody::GetGravityMode()
+{
+  if (this->bodyId)
+    return dBodyGetGravityMode(this->bodyId);
+  else
+    return false;
+}
+
+////////////////////////////////////////////////////////////////////////////////
 // Set whether this body will collide with others in the model
 void ODEBody::SetSelfCollide(bool collide)
 {
Index: server/physics/ode/ODEBody.hh
===================================================================
--- server/physics/ode/ODEBody.hh	(revision 8729)
+++ server/physics/ode/ODEBody.hh	(working copy)
@@ -120,6 +120,9 @@
     /// \brief Set whether gravity affects this body
     public: virtual void SetGravityMode(bool mode);
 
+    /// \brief Set whether gravity affects this body
+    public: virtual bool GetGravityMode();
+
     /// \brief Set whether this body will collide with others in the model
     public: void SetSelfCollide(bool collide);
 
Index: server/physics/bullet/BulletBody.cc
===================================================================
--- server/physics/bullet/BulletBody.cc	(revision 8729)
+++ server/physics/bullet/BulletBody.cc	(working copy)
@@ -209,6 +209,14 @@
 }
 
 ////////////////////////////////////////////////////////////////////////////////
+// Set whether gravity affects this body
+bool BulletBody::GetGravityMode()
+{
+  gzthrow("BulletBody::GetGravityMode not yet implemented");
+  return false;
+}
+
+////////////////////////////////////////////////////////////////////////////////
 /// Set whether this body will collide with others in the model
 void BulletBody::SetSelfCollide(bool collide)
 {
Index: server/physics/bullet/BulletBody.hh
===================================================================
--- server/physics/bullet/BulletBody.hh	(revision 8729)
+++ server/physics/bullet/BulletBody.hh	(working copy)
@@ -119,6 +119,9 @@
     /// \brief Set whether gravity affects this body
     public: virtual void SetGravityMode(bool mode);
 
+    /// \brief Set whether gravity affects this body
+    public: virtual bool GetGravityMode();
+
     /// \brief Set whether this body will collide with others in the model
     public: void SetSelfCollide(bool collide);
 
